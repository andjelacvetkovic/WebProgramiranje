// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Library.Migrations
{
    [DbContext(typeof(BibliotekaContext))]
    partial class BibliotekaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Biblioteka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Biblioteka");
                });

            modelBuilder.Entity("Models.Citalac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BibliotekaID")
                        .HasColumnType("int");

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ImeRoditelja")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("BibliotekaID");

                    b.ToTable("Citalac");
                });

            modelBuilder.Entity("Models.Knjiga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BibliotekaID")
                        .HasColumnType("int");

                    b.Property<string>("ImePisca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("BibliotekaID");

                    b.ToTable("Knjiga");
                });

            modelBuilder.Entity("Models.Pozajmljuje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BibliotekaID")
                        .HasColumnType("int");

                    b.Property<int?>("CitalacID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumVracanja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KnjigaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BibliotekaID");

                    b.HasIndex("CitalacID");

                    b.HasIndex("KnjigaID");

                    b.ToTable("Pozajmljuje");
                });

            modelBuilder.Entity("Models.Citalac", b =>
                {
                    b.HasOne("Models.Biblioteka", null)
                        .WithMany("ListaCitaoca")
                        .HasForeignKey("BibliotekaID");
                });

            modelBuilder.Entity("Models.Knjiga", b =>
                {
                    b.HasOne("Models.Biblioteka", "Biblioteka")
                        .WithMany("ListaKnjiga")
                        .HasForeignKey("BibliotekaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Biblioteka");
                });

            modelBuilder.Entity("Models.Pozajmljuje", b =>
                {
                    b.HasOne("Models.Biblioteka", "Biblioteka")
                        .WithMany()
                        .HasForeignKey("BibliotekaID");

                    b.HasOne("Models.Citalac", "Citalac")
                        .WithMany("ListaKnjiga")
                        .HasForeignKey("CitalacID");

                    b.HasOne("Models.Knjiga", "Knjiga")
                        .WithMany("ListaCitalaca")
                        .HasForeignKey("KnjigaID");

                    b.Navigation("Biblioteka");

                    b.Navigation("Citalac");

                    b.Navigation("Knjiga");
                });

            modelBuilder.Entity("Models.Biblioteka", b =>
                {
                    b.Navigation("ListaCitaoca");

                    b.Navigation("ListaKnjiga");
                });

            modelBuilder.Entity("Models.Citalac", b =>
                {
                    b.Navigation("ListaKnjiga");
                });

            modelBuilder.Entity("Models.Knjiga", b =>
                {
                    b.Navigation("ListaCitalaca");
                });
#pragma warning restore 612, 618
        }
    }
}
